{"version":3,"file":"src_app_pages_login_login_module_ts.js","mappings":"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","sources":["./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\n//se importa errortailor para los formularios reactivos\r\nimport { ErrorTailorModule } from '@ngneat/error-tailor';\r\n\r\n@NgModule({\r\n  imports: [\r\n    //da la funcion de los formularios reactivos\r\n    ReactiveFormsModule,\r\n    ErrorTailorModule.forRoot({\r\n      errors: {\r\n        useValue: {\r\n          required: 'Debes llenar este campo',\r\n          minlength: ({ requiredLength, actualLength }) =>\r\n                      `Expect ${requiredLength} but got ${actualLength}`,\r\n          invalidAddress: error => `Address isn't valid`\r\n        }\r\n      }\r\n    }),\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n//importación de router para la navegación\r\nimport { Router } from '@angular/router';\r\n//importación de logeo para el modelado de los datos\r\nimport { Logeo } from 'src/app/interfaces/task';\r\n//importación de los servicios taskservice\r\nimport { TaskService } from './../../services/task.service';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { Socket } from 'ngx-socket-io';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n  //mostrar contraseña\r\n  showPassword = false;\r\n  passwordToggleIcon = 'eye';\r\n\r\n  //se define la bariable datos y cmpos nulos\r\n  datos: Logeo = {\r\n    uid: null,\r\n    email: null,\r\n    password: null,\r\n  };\r\n\r\n  constructor(\r\n    //inyevta la importación de taskservices\r\n    private taskService: TaskService,\r\n    //inyecta la importación de router para las rutas\r\n    private router: Router,\r\n    //inyecta la importación del contructor de formularios de angular\r\n    private builder: FormBuilder,\r\n    public toastController: ToastController,\r\n    //se llama el servicio para actualizar la foto\r\n    private usuarioServicio: TaskService,\r\n    //se llama a socket.io\r\n    private socket: Socket,\r\n  ) { }\r\n\r\n  async errorl() {\r\n    const toast = await this.toastController.create({\r\n      message: 'Datos Invalidos',\r\n      color: 'danger',\r\n      duration: 2000\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  form: FormGroup;\r\n  //se llaman los campos para validarlos y sean campos requeridos\r\n  ngOnInit() {\r\n    // this.socket.connect();\r\n    this.form = this.builder.group({\r\n      correo: [null, [Validators.required, Validators.pattern('[A-Za-z0-9._%+-]{2,}@[a-zA-Z-_.]{2,}[.]{1}[a-zA-Z]{2,}')]],\r\n      contraseña: [null, Validators.required],\r\n    });\r\n\r\n    const token = localStorage.getItem('token');\r\n    const role = localStorage.getItem('role');\r\n\r\n    if (token) {\r\n      if (role === 'seguridad') {\r\n        this.router.navigate(['rolseguridad']);\r\n      }\r\n      else if(role === 'gestor'){\r\n        this.router.navigate(['inicioges']);\r\n      }\r\n      else if(role === 'funcionario'){\r\n        this.router.navigate(['iniciofun']);\r\n      }\r\n      else if(role === 'aprendiz'){\r\n        this.router.navigate(['inicioapre']);\r\n      }\r\n      else if(role === 'invitado'){\r\n        this.router.navigate(['inicioinv']);\r\n      }\r\n    }\r\n  }\r\n\r\n  public createLogeo() {\r\n    if (this.form.invalid){\r\n      return Object.values(this.form.controls).forEach(control=>{\r\n        control.markAsTouched();\r\n      });\r\n    }\r\n\r\n    //? se hace el llamdo de los campos del formulario y se les asigna el valor de la api\r\n    //? si no comple con los valores de la api la función try hacel el llamado del error\r\n    try {\r\n      const email = this.datos.email;\r\n      const password = this.datos.password;\r\n\r\n      const logeo = {\r\n          email: `${email}`,\r\n          password:`${password}`,\r\n        };\r\n\r\n      //se loguea el usuario con el llamado a createlogeo y lo retorna dependiendo del rolal su respevtivo home\r\n      this.taskService.createLogeo(logeo).subscribe((res: any) => {\r\n        //console.log(res.data.user);\r\n\r\n        if(res.data.user.idImgPerfil !== ''){\r\n          this.socket.emit('cliente:enviar-id-img', res.data.user.idImgPerfil);\r\n        }\r\n\r\n        this.socket.emit('cliente:newlogin', res.data.user);\r\n\r\n        //console.log(res.data.user.email);\r\n        localStorage.setItem('email', res.data.user.email);\r\n        //console.log(res.data.user.role[0]);\r\n        localStorage.setItem('role', res.data.user.role[0]);\r\n        //console.log(res.data.user.name);\r\n        localStorage.setItem('name', res.data.user.name);\r\n        // console.log(res.data.user.apellido);\r\n        localStorage.setItem('apellido', res.data.user.apellido);\r\n        //console.log(res.data.user.telefono);\r\n        localStorage.setItem('telefono', res.data.user.telefono);\r\n        //console.log(res.data.user.documento);\r\n        localStorage.setItem('documento', res.data.user.documento);\r\n        //console.log(res.data.user.idImgPerfil);\r\n        localStorage.setItem('idImgPerfil', res.data.user.idImgPerfil);\r\n\r\n\r\n\r\n      const token = res.data.token;\r\n      localStorage.setItem('token',token);\r\n      //se define cada rol donde debe ser redirigido\r\n\r\n          if (res.data.user.status==='VERIFIED') {\r\n            if (res.data.user.role[0] === 'aprendiz' ) {\r\n              this.router.navigate(['/inicioapre']);\r\n            }\r\n            else if (res.data.user.role[0] === 'funcionario') {\r\n              this.router.navigate(['/iniciofun']);\r\n              return;\r\n            }\r\n            else if (res.data.user.role[0] === 'invitado') {\r\n              this.router.navigate(['/inicioinv']);\r\n              return;\r\n            }\r\n            else if (res.data.user.role[0] === 'gestor') {\r\n              this.router.navigate(['/inicioges']);\r\n              return;\r\n            }\r\n            else if (res.data.user.role[0] === 'seguridad') {\r\n              this.router.navigate(['/rolseguridad']);\r\n              return;\r\n            }\r\n          } else {\r\n            this.router.navigate(['/verificacion-email']);\r\n          }\r\n        },error => {\r\n          this.errorl();\r\n        });\r\n\r\n  }\r\n  //error que aparece en consola avisando que no lleno correctamente los campos o son invalidos\r\n  catch(e){\r\n    console.log('Error->', e);\r\n  }\r\n\r\n  }\r\n\r\n  togglePassword(): void{\r\n    this.showPassword = !this.showPassword;\r\n\r\n    if(this.passwordToggleIcon === 'eye'){\r\n      this.passwordToggleIcon = 'eye-off';\r\n    }else {\r\n      this.passwordToggleIcon = 'eye';\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}