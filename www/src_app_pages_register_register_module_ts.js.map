{"version":3,"file":"src_app_pages_register_register_module_ts.js","mappings":"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","sources":["./src/app/pages/register/register-routing.module.ts","./src/app/pages/register/register.module.ts","./src/app/pages/register/register.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPageRoutingModule } from './register-routing.module';\r\n\r\nimport { RegisterPage } from './register.page';\r\n//se importa errortailor para los formularios reactivos\r\nimport { ErrorTailorModule } from '@ngneat/error-tailor';\r\n\r\n@NgModule({\r\n  imports: [\r\n    //da la funcion de los formularios reactivos\r\n    ReactiveFormsModule,\r\n    ErrorTailorModule.forRoot({\r\n      errors: {\r\n        useValue: {\r\n          required: 'Este campo es obligatorio',\r\n          minlength: ({ requiredLength, actualLength }) =>\r\n                      `Expect ${requiredLength} but got ${actualLength}`,\r\n          invalidAddress: error => `Address isn't valid`\r\n        }\r\n      }\r\n    }),\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegisterPageRoutingModule\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n//importación del modelado de register\r\nimport { Task } from 'src/app/interfaces/task';\r\n//importación de las rutas\r\nimport { Router } from '@angular/router';\r\n//importación de los servicios de task.service\r\nimport { TaskService } from './../../services/task.service';\r\n//importación de sweetalert2\r\nimport Swal from 'sweetalert2';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { Socket } from 'ngx-socket-io';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n\r\n  //mostrar contraseña\r\n  showPassword = false;\r\n  passwordToggleIcon = 'eye';\r\n\r\n  //se define la bariable datos y cmpos nulos\r\n  datos: any = {\r\n    documento: null,\r\n    nombre: null,\r\n    apellido: null,\r\n    telefono: null,\r\n    email: null,\r\n    role: 'invitado',\r\n  };\r\n\r\n  password: any;\r\n  confirmarpassword: any;\r\n\r\n  constructor(\r\n    //se inyeta la imortación de taskservice\r\n    private taskService: TaskService,\r\n    //se inyecta la importación de router\r\n    private router: Router,\r\n    // se inyecta la importación del contructor de formularios de angular\r\n    private builder: FormBuilder,\r\n    public toastController: ToastController,\r\n    private socket: Socket,\r\n  ) { }\r\n\r\n  async errorr(mensaje, duracion) {\r\n    const toast = await this.toastController.create({\r\n      message: mensaje,\r\n      color: 'danger',\r\n      duration: duracion,\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  async error2() {\r\n    const toast = await this.toastController.create({\r\n      message: 'Contraseñas no coinicden',\r\n      color: 'danger',\r\n      duration: 2000\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  form: FormGroup;\r\n//se llaman los campos para validarlos y sean requerdos\r\n  ngOnInit() {\r\n    this.form = this.builder.group({\r\n      doc: [null, Validators.required],\r\n      name: [null, Validators.required],\r\n      lastname: [null, Validators.required],\r\n      phone: [null, Validators.required],\r\n      correo: [null,[Validators.required, Validators.pattern('[A-Za-z0-9._%+-]{2,}@[a-zA-Z-_.]{2,}[.]{1}[a-zA-Z]{2,}')]],\r\n      contraseña: [null, [Validators.required]],\r\n      confirmarcontraseña: [null, Validators.required],\r\n    });\r\n  }\r\n\r\n  public registrar() {\r\n\r\n    if (this.form.invalid){\r\n      return Object.values(this.form.controls).forEach(control=>{\r\n        control.markAsTouched();\r\n      });\r\n    }\r\n\r\n    //se hace el llamdo de los campos del formulario y se les asigna el valor de la api\r\n    //si no comple con los valores de la api la función try hacel el llamado del error\r\n    try {\r\n      // eslint-disable-next-line one-var\r\n      const documento = this.datos.documento,\r\n      nombre = this.datos.nombre,\r\n      apellido =  this.datos.apellido,\r\n      telefono = this.datos.telefono,\r\n      email =  this.datos.email,\r\n      role =  this.datos.role;\r\n\r\n      if(this.password === this.confirmarpassword){\r\n        const verificontraseña = this.confirmarpassword;\r\n        const task = {\r\n        name:`${nombre}`,\r\n        apellido:`${apellido}`,\r\n        telefono:`${telefono}`,\r\n        documento:`${documento}`,\r\n        email:`${email}`,\r\n        password:`${verificontraseña}`,\r\n        role:`${role}`,\r\n        };\r\n\r\n        //se crea el usuario con el llamado a create task y lo retorna a verificación de email\r\n        this.taskService.createsTask(task).subscribe((res: any) => {\r\n          this.socket.emit('cliente:newuser', {\r\n            res\r\n          });\r\n          //console.log(res);\r\n          this.router.navigate(['/verificacion-email']);\r\n        },error => {\r\n\r\n          //console.log(error);\r\n\r\n          const err = error.error.msg;\r\n\r\n          if(err === 'EMAIL_ALREADY_REGISTERED'){\r\n            this.errorr('EL CORREO YA ESTA REGISTRADO', 3000);\r\n          }\r\n\r\n        });\r\n      }else{\r\n        this.error2();\r\n      }\r\n    }\r\n    //error en consola si no cumple con los datos\r\n    catch(error){\r\n      console.log('Error->', error);\r\n    }\r\n  }\r\n\r\n  togglePassword(): void{\r\n    this.showPassword = !this.showPassword;\r\n\r\n    if(this.passwordToggleIcon === 'eye'){\r\n      this.passwordToggleIcon = 'eye-off';\r\n    }else {\r\n      this.passwordToggleIcon = 'eye';\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}