{"version":3,"file":"src_app_pages_rolgest_base-excel_base-excel_module_ts.js","mappings":"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","sources":["./src/app/pages/rolgest/base-excel/base-excel-routing.module.ts","./src/app/pages/rolgest/base-excel/base-excel.module.ts","./src/app/pages/rolgest/base-excel/base-excel.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { BaseExcelPage } from './base-excel.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BaseExcelPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class BaseExcelPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { BaseExcelPageRoutingModule } from './base-excel-routing.module';\r\n\r\nimport { BaseExcelPage } from './base-excel.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    BaseExcelPageRoutingModule\r\n  ],\r\n  declarations: [BaseExcelPage]\r\n})\r\nexport class BaseExcelPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validator } from '@angular/forms';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { NavController, NavCustomEvent } from '@ionic/angular';\r\n//importacion de las rutas\r\nimport { Router } from '@angular/router';\r\n//importacion de los servicios\r\nimport { TaskService } from 'src/app/services/task.service';\r\n//importacion de toaskcontroller\r\nimport { ToastController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-base-excel',\r\n  templateUrl: './base-excel.page.html',\r\n  styleUrls: ['./base-excel.page.scss'],\r\n})\r\nexport class BaseExcelPage implements OnInit {\r\n\r\n//llamdo de los datos url y name en tipo string\r\nurl: string;\r\nnombre: string;\r\n\r\n//previsualización de la imagen en la vista\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\npublic previsualizacion: String;\r\n//llamdo del archivo para subirlo\r\npublic archivos: any = [];\r\n//llamado de la función cargando\r\npublic loading: boolean;\r\n\r\nconstructor(\r\n  //se inyectan las rutas\r\n  private router: Router,\r\n  //se llama el servicio para actualizar la foto\r\n  private usuarioServicio: TaskService,\r\n  //se inyecta sanitizar\r\n  private sanitizer: DomSanitizer,\r\n  //inyecta la importación de tosatcontroller\r\n  public toastController: ToastController,\r\n) {\r\n  this.nombre=localStorage.getItem('name');\r\n}\r\n\r\nasync errorl(mensaje, duracion) {\r\n  //función que hace el llamado de una alerta sobre un error\r\n  const toast = await this.toastController.create({\r\n    message: mensaje,\r\n    color: 'danger',\r\n    duration: duracion,\r\n  });\r\n  toast.present();\r\n}\r\n\r\nasync chec(mensaje, duracion) {\r\n  //función que hace el llamado de una alerta sobre un error\r\n  const toast = await this.toastController.create({\r\n    message: mensaje,\r\n    color: 'success',\r\n    duration: duracion,\r\n  });\r\n  toast.present();\r\n}\r\n\r\nngOnInit() {\r\n  //muestra la foto de perfil\r\n  //this.traerfotol();\r\n}\r\n\r\nsalir(){\r\n  //función de cerrar seción\r\n  localStorage.clear();\r\n  this.router.navigate(['login']);\r\n}\r\n\r\ntraerfotol(){\r\n  //función de traer la foto de perfil\r\n  const token = localStorage.getItem('token');\r\n  const idImgPerfil = localStorage.getItem('idImgPerfil');\r\n\r\n  // console.log('Token -->',token);\r\n  // console.log('imgPer -->',idImgPerfil);\r\n\r\n  this.usuarioServicio.traerfotoperfil(token, idImgPerfil).subscribe((res: any)=>{\r\n    //console.log(res.data.url);\r\n    this.url = res.data.url;\r\n  });\r\n}\r\n\r\ncapturarFoto(event): any{\r\n  //función del llamdo de la foto\r\n  const archivoCapturado = event.target.files[0];\r\n\r\n  //console.log(archivoCapturado);\r\n\r\n  this.archivos.push(archivoCapturado);\r\n  //console.log(event.target.files);\r\n}\r\n\r\nsubirFoto(): any {\r\n  //función que llama el servicio para actualixar la foto\r\n  try {\r\n    this.loading = true;\r\n    const formularioDeDatos = new FormData();\r\n      formularioDeDatos.append('MyExcel', this.archivos[0]);\r\n\r\n\r\n    const foto = this.previsualizacion;\r\n    const token = localStorage.getItem('token');\r\n\r\n    this.usuarioServicio.enviarexcel(token,formularioDeDatos).subscribe((res: any) => {\r\n        this.loading = false;\r\n        //console.log('Respuesta del servidor', res);\r\n\r\n        const correcto = res.msg;\r\n\r\n        if(correcto === 'CREADO CON EXITO'){\r\n        this.chec('SE CREARON TODOS LOS USUARIOS CON EXITO', 4000);\r\n        }\r\n    },error => {\r\n      console.log(error);\r\n\r\n      const err = error.error.msg;\r\n\r\n      if(err === 'ERROR_DETALLE_ITEMS'){\r\n        this.errorl('DEBES SUBIR UN ARCHIVO EXCEL', 4000);\r\n      }\r\n\r\n    });\r\n\r\n  } catch (e) {\r\n    this.loading = false;\r\n    console.log('ERROR', e);\r\n  }\r\n}\r\n\r\n// enviarExcel(): any {\r\n//   try {\r\n//     const formularioDeDatosEx = new FormData();\r\n//       formularioDeDatosEx.append('MyExcel', this.archivos[0]);\r\n\r\n\r\n//     const foto = this.previsualizacion;\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     this.usuarioServicio.enviarexcel(token,formularioDeDatosEx).subscribe(res => {\r\n//         this.loading = false;\r\n//         console.log('Respuesta del servidor', res);\r\n//     });\r\n\r\n//   } catch (e) {\r\n//     this.loading = false;\r\n//     console.log('ERROR', e);\r\n//   }\r\n// }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}