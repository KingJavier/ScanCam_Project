{"version":3,"file":"src_app_pages_forgot-password_forgot-password_module_ts.js","mappings":"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","sources":["./src/app/pages/forgot-password/forgot-password-routing.module.ts","./src/app/pages/forgot-password/forgot-password.module.ts","./src/app/pages/forgot-password/forgot-password.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ForgotPasswordPage } from './forgot-password.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForgotPasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ForgotPasswordPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ForgotPasswordPageRoutingModule } from './forgot-password-routing.module';\r\n\r\nimport { ForgotPasswordPage } from './forgot-password.page';\r\n//se importa errortailor para los formularios reactivos\r\nimport { ErrorTailorModule } from '@ngneat/error-tailor';\r\n\r\n@NgModule({\r\n  imports: [\r\n    //da la funcion de los formularios reactivos\r\n    ReactiveFormsModule,\r\n    ErrorTailorModule.forRoot({\r\n      errors: {\r\n        useValue: {\r\n          required: 'Este campo es obligatorio',\r\n          minlength: ({ requiredLength, actualLength }) =>\r\n                      `Expect ${requiredLength} but got ${actualLength}`,\r\n          invalidAddress: error => `Address isn't valid`\r\n        }\r\n      }\r\n    }),\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ForgotPasswordPageRoutingModule\r\n  ],\r\n  declarations: [ForgotPasswordPage]\r\n})\r\nexport class ForgotPasswordPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n//importación de las rutas\r\nimport { Router } from '@angular/router';\r\n//importación del modelado de Olvido\r\nimport { Olvido } from 'src/app/interfaces/task';\r\n//importación de los servicios de la api\r\nimport { TaskService } from 'src/app/services/task.service';\r\n//importacion de toaskcontroller\r\nimport { ToastController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.page.html',\r\n  styleUrls: ['./forgot-password.page.scss'],\r\n})\r\nexport class ForgotPasswordPage implements OnInit {\r\n//se le define la bariable datos\r\n  datos: Olvido = {\r\n    uid: null,\r\n    email: null,\r\n  };\r\n\r\n  constructor(\r\n    //inyecta la importación de taskservice\r\n    private taskService: TaskService,\r\n    //inyecta la importación de las rutas\r\n    private router: Router,\r\n    //inyecta la importación del constructor de formularios de angular\r\n    private builder: FormBuilder,\r\n    //inyecta la importación de tosatcontroller\r\n    public toastController: ToastController\r\n  ) { }\r\n\r\n  async errorl(mensaje, duracion) {\r\n    //función que hace el llamado de una alerta sobre un error\r\n    const toast = await this.toastController.create({\r\n      message: mensaje,\r\n      color: 'danger',\r\n      duration: duracion,\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  async chec(mensaje, duracion) {\r\n    //función que hace el llamado de una alerta sobre un error\r\n    const toast = await this.toastController.create({\r\n      message: mensaje,\r\n      color: 'success',\r\n      duration: duracion,\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  form: FormGroup;\r\n//se define para el formulario reactico el cual tiene que ser un validador requerido\r\n  ngOnInit() {\r\n    this.form = this.builder.group({\r\n      correo: [null, [Validators.required, Validators.pattern('[A-Za-z0-9._%+-]{2,}@[a-zA-Z-_.]{2,}[.]{1}[a-zA-Z]{2,}')]],\r\n    });\r\n  }\r\n\r\n  public olvidar() {\r\n\r\n    if (this.form.invalid){\r\n      return Object.values(this.form.controls).forEach(control=>{\r\n        control.markAsTouched();\r\n      });\r\n    }\r\n\r\n    //se hace el llamdo de los campos del formulario y se les asigna el valor de la api\r\n    //si no comple con los valores de la api la función try hacel el llamado del error\r\n      try {\r\n      // eslint-disable-next-line one-var\r\n      const email =  this.datos.email;\r\n\r\n      const olvido = {\r\n        email:`${email}`,\r\n        };\r\n        //se crea el token para mandarlo al correo y confirmar el correo\r\n    this.taskService.updateOlvido(olvido).subscribe((res: any) => {\r\n      //console.log(olvido);\r\n      //console.log(res);\r\n\r\n      const correcto = res.msg;\r\n\r\n      if(correcto === 'Correo enviado satisfactoriamente, sigue las instrucciones'){\r\n        this.chec('SE ENVIO EL CORREO CORRECTAMENTE', 4000);\r\n      }\r\n       //this.router.navigate(['/']);\r\n    },error => {\r\n      console.log(error);\r\n\r\n      const err = error.error.msg;\r\n\r\n      if(err === 'No se encontro el usuario ingresado'){\r\n        this.errorl('EL CORREO NO ESTA REGISTRADO O VERIFICA QUE ESTE BIEN ESCRITO', 4000);\r\n      }\r\n\r\n    });\r\n  }\r\n  //error en consola si no cumple con los datos\r\n  catch(error){\r\n    console.log('Error->', error);\r\n  }\r\n}\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}